{"ast":null,"code":"import { BROWSER_STORAGE } from '../storage';\nimport { TripDataService } from './trip-data.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./trip-data.service\";\nexport let AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(storage, tripDataService) {\n      this.storage = storage;\n      this.tripDataService = tripDataService;\n    }\n    getToken() {\n      return this.storage.getItem('travlr-token');\n    }\n    saveToken(token) {\n      this.storage.setItem('travlr-token', token);\n    }\n    login(user) {\n      return this.tripDataService.login(user).then(authResp => this.saveToken(authResp.token));\n    }\n    register(user) {\n      return this.tripDataService.register(user).then(authResp => this.saveToken(authResp.token));\n    }\n    logout() {\n      this.storage.removeItem('travlr-token');\n    }\n    isLoggedIn() {\n      const token = this.getToken();\n      if (token) {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        return payload.exp > Date.now() / 1000;\n      } else {\n        return false;\n      }\n    }\n    getCurrentUser() {\n      if (this.isLoggedIn()) {\n        const token = this.getToken();\n        const {\n          email,\n          name\n        } = JSON.parse(atob(token.split('.')[1]));\n        return {\n          email,\n          name\n        };\n      }\n    }\n    static #_ = this.ɵfac = function AuthenticationService_Factory(t) {\n      return new (t || AuthenticationService)(i0.ɵɵinject(BROWSER_STORAGE), i0.ɵɵinject(i1.TripDataService));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthenticationService,\n      factory: AuthenticationService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return AuthenticationService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}